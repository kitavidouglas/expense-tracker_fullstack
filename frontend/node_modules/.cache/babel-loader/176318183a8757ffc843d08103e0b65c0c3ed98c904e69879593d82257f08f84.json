{"ast":null,"code":"var _jsxFileName = \"/home/kitavidouglas/Desktop/expense-tracker_fullstack/frontend/src/Components/Charts/LineChart.js\";\n// src/Components/Charts/LineChart.js\n\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\n/**\n * @param {Array} data - Example: [{ date: '2023-01-01', sales: 2000 }, { date: '2023-02-01', sales: 3000 }, ... ]\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction LineChart(_ref) {\n  let {\n    data = []\n  } = _ref;\n  const labels = data.map(item => item.date);\n  const values = data.map(item => item.sales);\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Sales',\n      data: values,\n      borderColor: '#4CAF50',\n      backgroundColor: 'rgba(76, 175, 80, 0.2)',\n      tension: 0.2,\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom'\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LineChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = LineChart;\nconst LineChartStyled = styled.div`\n  width: 100%;\n  height: 250px;\n`;\n_c2 = LineChartStyled;\nexport default LineChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"LineChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","styled","register","LineChart","data","labels","map","item","date","values","sales","chartData","datasets","label","borderColor","backgroundColor","tension","fill","options","responsive","plugins","legend","position","scales","x","grid","display","y","color","LineChartStyled","div"],"sources":["/home/kitavidouglas/Desktop/expense-tracker_fullstack/frontend/src/Components/Charts/LineChart.js"],"sourcesContent":["// src/Components/Charts/LineChart.js\n\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\n/**\n * @param {Array} data - Example: [{ date: '2023-01-01', sales: 2000 }, { date: '2023-02-01', sales: 3000 }, ... ]\n */\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction LineChart({ data = [] }) {\n  const labels = data.map((item) => item.date);\n  const values = data.map((item) => item.sales);\n\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Sales',\n        data: values,\n        borderColor: '#4CAF50',\n        backgroundColor: 'rgba(76, 175, 80, 0.2)',\n        tension: 0.2,\n        fill: true,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n    },\n    scales: {\n      x: { grid: { display: false } },\n      y: { grid: { color: '#eee' } },\n    },\n  };\n\n  return (\n    <LineChartStyled>\n      <Line data={chartData} options={options} />\n    </LineChartStyled>\n  );\n}\n\nconst LineChartStyled = styled.div`\n  width: 100%;\n  height: 250px;\n`;\n\nexport default LineChart;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AACA;AAFA;AAGAT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AAED,SAASI,SAAS,OAAgB;EAAA,IAAf;IAAEC,IAAI,GAAG;EAAG,CAAC;EAC9B,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;EAC5C,MAAMC,MAAM,GAAGL,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,KAAK,CAAC;EAE7C,MAAMC,SAAS,GAAG;IAChBN,MAAM;IACNO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdT,IAAI,EAAEK,MAAM;MACZK,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,wBAAwB;MACzCC,OAAO,EAAE,GAAG;MACZC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QAAEC,IAAI,EAAE;UAAEC,OAAO,EAAE;QAAM;MAAE,CAAC;MAC/BC,CAAC,EAAE;QAAEF,IAAI,EAAE;UAAEG,KAAK,EAAE;QAAO;MAAE;IAC/B;EACF,CAAC;EAED,oBACE,QAAC,eAAe;IAAA,uBACd,QAAC,IAAI;MAAC,IAAI,EAAEjB,SAAU;MAAC,OAAO,EAAEO;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEtB;AAAC,KApCQf,SAAS;AAsClB,MAAM0B,eAAe,GAAG5B,MAAM,CAAC6B,GAAI;AACnC;AACA;AACA,CAAC;AAAC,MAHID,eAAe;AAKrB,eAAe1B,SAAS;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}