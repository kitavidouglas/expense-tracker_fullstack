{"ast":null,"code":"var _jsxFileName = \"/home/kitavidouglas/Desktop/expense-tracker_fullstack/frontend/src/Components/Charts/BarChart.js\";\n// src/Components/Charts/BarChart.js\n\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n/**\n * @param {Array} data - Example: [{ month: 'Jan', amount: 4000 }, { month: 'Feb', amount: 3000 }, ... ]\n */\nfunction BarChart(_ref) {\n  let {\n    data = []\n  } = _ref;\n  // Convert incoming data to labels and amounts for Chart.js\n  const labels = data.map(item => item.month);\n  const amounts = data.map(item => item.amount);\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Cash Flow',\n      data: amounts,\n      backgroundColor: '#4CAF50',\n      // Example color (green)\n      borderRadius: 5\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      // Hide legend if only one dataset\n      title: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        grid: {\n          color: '#eee'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BarChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = BarChart;\nconst BarChartStyled = styled.div`\n  width: 100%;\n  height: 250px; \n`;\n_c2 = BarChartStyled;\nexport default BarChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"BarChart\");\n$RefreshReg$(_c2, \"BarChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","styled","register","BarChart","data","labels","map","item","month","amounts","amount","chartData","datasets","label","backgroundColor","borderRadius","options","responsive","plugins","legend","display","title","scales","x","grid","y","color","BarChartStyled","div"],"sources":["/home/kitavidouglas/Desktop/expense-tracker_fullstack/frontend/src/Components/Charts/BarChart.js"],"sourcesContent":["// src/Components/Charts/BarChart.js\n\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport styled from 'styled-components';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n/**\n * @param {Array} data - Example: [{ month: 'Jan', amount: 4000 }, { month: 'Feb', amount: 3000 }, ... ]\n */\nfunction BarChart({ data = [] }) {\n  // Convert incoming data to labels and amounts for Chart.js\n  const labels = data.map((item) => item.month);\n  const amounts = data.map((item) => item.amount);\n\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Cash Flow',\n        data: amounts,\n        backgroundColor: '#4CAF50', // Example color (green)\n        borderRadius: 5,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: { display: false }, // Hide legend if only one dataset\n      title: { display: false },\n    },\n    scales: {\n      x: { grid: { display: false } },\n      y: { grid: { color: '#eee' } },\n    },\n  };\n\n  return (\n    <BarChartStyled>\n      <Bar data={chartData} options={options} />\n    </BarChartStyled>\n  );\n}\n\nconst BarChartStyled = styled.div`\n  width: 100%;\n  height: 250px; \n`;\n\nexport default BarChart;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;;AAED;AACA;AACA;AACA,SAASI,QAAQ,OAAgB;EAAA,IAAf;IAAEC,IAAI,GAAG;EAAG,CAAC;EAC7B;EACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC;EAC7C,MAAMC,OAAO,GAAGL,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,MAAM,CAAC;EAE/C,MAAMC,SAAS,GAAG;IAChBN,MAAM;IACNO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBT,IAAI,EAAEK,OAAO;MACbK,eAAe,EAAE,SAAS;MAAE;MAC5BC,YAAY,EAAE;IAChB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC;MAAE;MAC5BC,KAAK,EAAE;QAAED,OAAO,EAAE;MAAM;IAC1B,CAAC;IACDE,MAAM,EAAE;MACNC,CAAC,EAAE;QAAEC,IAAI,EAAE;UAAEJ,OAAO,EAAE;QAAM;MAAE,CAAC;MAC/BK,CAAC,EAAE;QAAED,IAAI,EAAE;UAAEE,KAAK,EAAE;QAAO;MAAE;IAC/B;EACF,CAAC;EAED,oBACE,QAAC,cAAc;IAAA,uBACb,QAAC,GAAG;MAAC,IAAI,EAAEf,SAAU;MAAC,OAAO,EAAEK;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC3B;AAErB;AAAC,KAlCQb,QAAQ;AAoCjB,MAAMwB,cAAc,GAAG1B,MAAM,CAAC2B,GAAI;AAClC;AACA;AACA,CAAC;AAAC,MAHID,cAAc;AAKpB,eAAexB,QAAQ;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}